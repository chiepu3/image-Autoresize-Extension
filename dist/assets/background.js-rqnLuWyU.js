chrome.runtime.onInstalled.addListener(()=>{chrome.contextMenus.create({id:"saveImage",title:"画像を保存する",contexts:["image"]})});function r(){const e=new Date,a=e.getFullYear().toString().slice(-2)+(e.getMonth()+1).toString().padStart(2,"0")+e.getDate().toString().padStart(2,"0"),t=e.getTime();return`${a}_${t.toString().slice(-6)}`}async function i(e){const t=await(await fetch(e)).blob();return new Promise((n,s)=>{const o=new FileReader;o.onloadend=()=>n(o.result.split(",")[1]),o.onerror=s,o.readAsDataURL(t)})}chrome.contextMenus.onClicked.addListener(async(e,a)=>{if(e.menuItemId==="saveImage"){const t=e.srcUrl,n=r()+".png";try{if((await fetch("http://localhost:8020/download-image",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({url:t,filename:n})})).ok){console.log("Image downloaded successfully on server");return}const o=await i(t);if((await fetch("http://localhost:8020/save-image",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({filename:n,imageData:o})})).ok)console.log("Image saved successfully on server");else throw new Error("Failed to save image on server")}catch(s){console.error("Error processing image:",s)}}});
